name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the Docker image'
        required: false
  repository_dispatch:
    types: [docker-image-updated]

jobs:
  PUBLISH_DOCKER_IMAGE:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOCKER_USERNAME: "mahmoudazaid"
      DOCKER_SCOUT: "https://github.com/docker/scout-cli/releases/download/v1.15.0/docker-scout_1.15.0_linux_amd64.tar.gz"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from Dockerfile (ARG, LABEL, ENV)
      id: extract_version
      if: env.VERSION == ''
      run: |
        VERSION=$(grep -m 1 -E '^(ARG|LABEL|ENV)\s+APPIUM_VERSION=' Dockerfile | cut -d '=' -f2 | tr -d '"')
        echo "VERSION=$VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Fail if no version is set
      if: env.VERSION == ''
      run: |
        echo "Error: APPIUM_VERSION missed in the Dockerfile."
        exit 1

    - name: Build Docker images
      run: |
        # Standard build tags
        docker build -t ${{ env.DOCKER_USERNAME }}/appium-device-farm:${{ env.VERSION }} .
        docker build -t ${{ env.DOCKER_USERNAME }}/appium-device-farm:latest .

    - name: Install Docker Scout ${{ env.DOCKER_SCOUT }}
      run: |
        curl -fsSL ${{ env.DOCKER_SCOUT }} | tar xz -C /usr/local/bin
        sudo ln -s /usr/local/bin/docker-scout /usr/bin/scout
        docker-scout version
  
    - name: Run Docker Scout to scan the images for vulnerabilities
      run: |
        docker-scout cves ${{ env.DOCKER_USERNAME }}/appium-device-farm:${{ env.VERSION }}
        docker-scout cves ${{ env.DOCKER_USERNAME }}/appium-device-farm:latest

    - name: Push Docker images
      run: |
        docker push ${{ env.DOCKER_USERNAME }}/appium-device-farm:${{ env.VERSION }}
        docker push ${{ env.DOCKER_USERNAME }}/appium-device-farm:latest

    - name: Clean up Docker images
      run: |
        docker image prune -af
